{"version":3,"file":"static/js/687.e5a73101.chunk.js","mappings":"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","sources":["components/headerActorList/index.js","components/templateActorListPage/index.js","pages/creditsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props ) => {\r\n    const title = props.title\r\n    const navigate = useNavigate();\r\n    return (\r\n        <Paper\r\n            component=\"div\"\r\n            sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                flexWrap: \"wrap\",\r\n                marginBottom: 1.5,\r\n            }}\r\n        >\r\n            <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\r\n                <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <Typography variant=\"h4\" component=\"h3\">\r\n                {title}\r\n            </Typography>\r\n            <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\r\n                <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState,Suspense,lazy } from \"react\";\r\nimport Header from \"../headerActorList\";\r\nimport Grid from \"@mui/material/Grid\";\r\nconst  FilterCard = lazy(() => import(\"../filterActorsCard\"));\r\nconst ActorList = lazy(() => import(\"../actorList\"));\r\n\r\n\r\nfunction ActorListPageTemplate({ actors, title, action }) {\r\n    const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n    let displayedActors = actors\r\n        .filter((m) => {\r\n            return m.name && m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n        });\r\n\r\n    const handleChange = (type, value) => {\r\n        if (type === \"name\") setNameFilter(value);\r\n    };\r\n\r\n    return (\r\n        <Grid container sx={{ padding: '20px' }}>\r\n            <Grid item xs={12}>\r\n                <Header title={title} />\r\n            </Grid>\r\n            <Suspense fallback={<h1>Building list</h1>}>\r\n            <Grid item container spacing={5}>\r\n                <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <FilterCard\r\n                        onUserInput={handleChange}\r\n                        nameFilter={nameFilter}\r\n                    />\r\n                </Grid>\r\n                <ActorList action={action} actors={displayedActors}></ActorList>\r\n            </Grid>\r\n            </Suspense>\r\n        </Grid>\r\n    );\r\n}\r\nexport default ActorListPageTemplate;","import React, {useEffect} from \"react\";\r\nimport {getCredits} from \"../api/tmdb-api\";\r\nimport PageTemplate from '../components/templateActorListPage';\r\nimport {useQuery} from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst HomePage = (props) => {\r\n    const {id} = useParams();\r\n    const {data, refetch, error, isLoading, isError} = useQuery([\"actor\", {id: id}], getCredits);\r\n    console.log(data);\r\n    useEffect(() => {\r\n        if (!data || !data.cast[0].name) {\r\n            refetch();\r\n        }\r\n    }, [data, refetch]);\r\n    if (isLoading) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>\r\n    }\r\n    if (!data || !data.cast[0].name) {\r\n        return <Spinner/>; // 或者返回某种“无数据”或“加载中”的提示\r\n    }\r\n    const actors = data.cast;\r\n\r\n    return (\r\n        <PageTemplate\r\n            title=\"Credits\"\r\n            actors={actors}\r\n            action={(actor) => {\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default HomePage;"],"names":["props","title","navigate","useNavigate","_jsxs","Paper","component","sx","display","justifyContent","flexWrap","marginBottom","children","_jsx","IconButton","onClick","ArrowBackIcon","color","fontSize","Typography","variant","ArrowForwardIcon","FilterCard","lazy","ActorList","_ref","actors","action","_useState","useState","_useState2","_slicedToArray","nameFilter","setNameFilter","displayedActors","filter","m","name","toLowerCase","search","Grid","container","padding","item","xs","Header","Suspense","fallback","spacing","sm","md","lg","xl","onUserInput","type","value","id","useParams","_useQuery","useQuery","getCredits","data","refetch","error","isLoading","isError","console","log","useEffect","cast","Spinner","message","PageTemplate","actor"],"sourceRoot":""}