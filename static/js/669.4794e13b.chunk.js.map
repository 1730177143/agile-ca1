{"version":3,"file":"static/js/669.4794e13b.chunk.js","mappings":"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","sources":["components/headerMovie/index.js","components/templateMoviePage/index.js","components/reviewForm/index.js","pages/addMovieReviewPage.js"],"sourcesContent":["import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MovieHeader = (props) => {\r\n  const movie = props.movie;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Paper \r\n        component=\"div\" \r\n        sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n            padding: 1.5,\r\n            margin: 0,\r\n        }}\r\n      >\r\n      <IconButton aria-label=\"go back\" onClick={() => navigate(-1)} >\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        {movie.title}\r\n        <a href={movie.homepage}>\r\n          <HomeIcon color=\"primary\" />\r\n        </a>\r\n        <br />\r\n        <span sx={{ fontSize: \"1.5rem\" }}>{`   \"${movie.tagline}\"`} </span>\r\n      </Typography>\r\n\r\n      <IconButton aria-label=\"go forward\" onClick={() => navigate(+1) } >\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MovieHeader;","import React from \"react\";\r\nimport MovieHeader from \"../headerMovie\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport { getMovieImages } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\nconst TemplateMoviePage = ({ movie, children }) => {\r\n  const { data , error, isLoading, isError } = useQuery(\r\n    [\"images\", { id: movie.id }],\r\n    getMovieImages\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  const images = data.posters \r\n\r\n  return (\r\n    <>\r\n      <MovieHeader movie={movie} />\r\n\r\n      <Grid container spacing={5} sx={{ padding: \"15px\" }}>\r\n        <Grid item xs={3}>\r\n          <div sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n          }}>\r\n            <ImageList \r\n                cols={1}>\r\n                {images.map((image) => (\r\n                    <ImageListItem key={image.file_path} cols={1}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\r\n                        alt={image.poster_path}\r\n                    />\r\n                    </ImageListItem>\r\n                ))}\r\n            </ImageList>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={9}>\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateMoviePage;","import React, { useState, useContext } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ratings = [\r\n  {\r\n    value: 5,\r\n    label: \"Excellent\",\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"Good\",\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Poor\",\r\n  },\r\n  {\r\n    value: 0,\r\n    label: \"Terrible\",\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 2,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"left\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    \"& > * \": {\r\n      marginTop: 2,\r\n    },\r\n  },\r\n  textField: {\r\n    width: \"40ch\",\r\n  },\r\n  submit: {\r\n    marginRight: 2,\r\n  },\r\n  snack: {\r\n    width: \"50%\",\r\n    \"& > * \": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n};\r\n\r\nconst ReviewForm = ({ movie }) => {\r\n  const [rating, setRating] = useState(3);\r\n  \r\n  const [open, setOpen] = useState(false); \r\n  const navigate = useNavigate();\r\n\r\n  const context = useContext(MoviesContext);\r\n\r\n  const defaultValues = {\r\n    author: \"\",\r\n    review: \"\",\r\n    agree: false,\r\n    rating: \"3\",\r\n  };\r\n  \r\n  const {\r\n    control,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm(defaultValues);\r\n\r\n  const handleSnackClose = (event) => {\r\n    setOpen(false);\r\n    navigate(\"/movies/favorites\");\r\n  };\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (review) => {\r\n    review.movieId = movie.id;\r\n    review.rating = rating;\r\n    // console.log(review);\r\n    context.addReview(movie, review);\r\n    setOpen(true); // NEW\r\n  };\r\n\r\n  return (\r\n    <Box component=\"div\" sx={styles.root}>\r\n      <Typography component=\"h2\" variant=\"h3\">\r\n        Write a review\r\n      </Typography>\r\n\r\n      <Snackbar\r\n        sx={styles.snack}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={open}\r\n        onClose={handleSnackClose}\r\n      >\r\n        <MuiAlert\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n          onClose={handleSnackClose}\r\n        >\r\n          <Typography variant=\"h4\">\r\n            Thank you for submitting a review\r\n          </Typography>\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <form sx={styles.form} onSubmit={handleSubmit(onSubmit)} noValidate>\r\n        <Controller\r\n          name=\"author\"\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              sx={{ width: \"40ch\" }}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={onChange}\r\n              value={value}\r\n              id=\"author\"\r\n              label=\"Author's name\"\r\n              name=\"author\"\r\n              autoFocus\r\n            />\r\n          )}\r\n        />\r\n        {errors.author && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.author.message}\r\n          </Typography>\r\n        )}\r\n        <Controller\r\n          name=\"review\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Review cannot be empty.\",\r\n            minLength: { value: 10, message: \"Review is too short\" },\r\n          }}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"review\"\r\n              value={value}\r\n              onChange={onChange}\r\n              label=\"Review text\"\r\n              id=\"review\"\r\n              multiline\r\n              minRows={10}\r\n            />\r\n          )}\r\n        />\r\n        {errors.review && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.review.message}\r\n          </Typography>\r\n        )}\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"rating\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              id=\"select-rating\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Rating Select\"\r\n              value={rating}\r\n              onChange={handleRatingChange}\r\n              helperText=\"Don't forget your rating\"\r\n            >\r\n              {ratings.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n        />\r\n\r\n        <Box sx={styles.buttons}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={styles.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={styles.submit}\r\n            onClick={() => {\r\n              reset({\r\n                author: \"\",\r\n                content: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;","import React from \"react\";\r\nimport PageTemplate from \"../components/templateMoviePage\";\r\nimport ReviewForm from \"../components/reviewForm\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getMovie } from \"../api/tmdb-api\";\r\nimport Spinner from \"../components/spinner\";\r\n\r\nconst WriteReviewPage = (props) => {\r\n  const location = useLocation();\r\n  const movieId = location.state.movieId;\r\n\r\n  const { data: movie, error, isLoading, isError } = useQuery(\r\n    [\"movie\", { id: movieId }],\r\n    getMovie\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  return (\r\n    <PageTemplate movie={movie}>\r\n      <ReviewForm movie={movie} />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default WriteReviewPage;"],"names":["props","movie","navigate","useNavigate","_jsxs","Paper","component","sx","display","justifyContent","flexWrap","padding","margin","children","_jsx","IconButton","onClick","ArrowBackIcon","color","fontSize","Typography","variant","title","href","homepage","HomeIcon","concat","tagline","ArrowForwardIcon","_ref","_useQuery","useQuery","id","getMovieImages","data","error","isLoading","isError","Spinner","message","images","posters","_Fragment","MovieHeader","Grid","container","spacing","item","xs","ImageList","cols","map","image","ImageListItem","src","file_path","alt","poster_path","ratings","value","label","styles","root","marginTop","flexDirection","alignItems","form","width","textField","submit","marginRight","snack","_useState","useState","_useState2","_slicedToArray","rating","setRating","_useState3","_useState4","open","setOpen","context","useContext","MoviesContext","_useForm","useForm","author","review","agree","control","errors","formState","handleSubmit","reset","handleSnackClose","event","handleRatingChange","target","Box","Snackbar","anchorOrigin","vertical","horizontal","onClose","MuiAlert","severity","onSubmit","movieId","addReview","noValidate","Controller","name","rules","required","defaultValue","render","_ref2","_ref2$field","field","onChange","TextField","autoFocus","minLength","_ref3","_ref3$field","fullWidth","multiline","minRows","_ref4","_ref4$field","select","helperText","option","MenuItem","buttons","Button","type","content","useLocation","state","getMovie","PageTemplate","ReviewForm"],"sourceRoot":""}